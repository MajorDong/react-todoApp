{"version":3,"sources":["components/appbar/appbar.js","components/avatar/appAvatar.js","components/gradientcolor/GradientColor.js","components/gradient/Gradient.js","action/index.js","components/task/Task.js","components/todo/Todo.js","components/todolist/TodoList.js","components/tododetail/TodoDetail.js","components/floatingbutton/FloatingButton.js","components/todoediting/TodoEditing.js","view/home/home.js","router/index.js","reducer/index.js","stroe/index.js","App.js","index.js","assets/face.jpeg"],"names":["AppBar","props","state","handleClick","bind","handleClick1","e","stopPropagation","this","leftfuc","className","onClick","selected","left","title","right","React","Component","defaultProps","connect","Appavatar","today","Date","toDateString","toUpperCase","src","imgURL","size","todayTasks","length","getToday","tasks","todos","forEach","todo","task","done","deleted","push","GradientColor","active","style","colorBottom","colors","colorTop","backgroundImage","theColor","propType","PropTypes","bool","array","Gradient","map","index","key","name","currentIndex","selectTodo","selectedTodo","type","unselectTodo","nextTodo","prevTodo","doneTask","value","deleteTask","toggleEditing","handleTxtOnchange","Task","dispatch","bindActionCreators","Todo","theSelected","progressColor","useMemo","colorLeft","colorRight","filter","doneTasks","progress","allCount","doneCount","Math","round","selectfuc","color","icon","width","item","id","TodoList","using","TodoListRef","createRef","ref","transform","TodoListEL","current","touch","undefined","document","body","ontouchstart","addEventListener","startX","touches","clientX","endX","abs","setState","TodoDetail","currentTodo","FloatingButton","editing","gradientcolor","TodoEditing","handleOnchange","console","log","target","rows","placeholder","text","onChange","Home","RouterIndex","path","component","defaultState","unselect","reducer","action","newState","JSON","parse","stringify","count","unshift","random","store","createStore","App","ReactDOM","render","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9057400a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport './appbar.scss'\n\n\n\nclass AppBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {  }\n    this.handleClick = this.handleClick.bind(this)\n    this.handleClick1 = this.handleClick1.bind(this)\n  }\n  handleClick(e){\n    e.stopPropagation()\n    this.props.leftfuc()\n  }\n  handleClick1(){\n\n  }\n  render() { \n    return ( \n      <div className=\"appBar\" >\n        <span onClick={!!this.props.selected ? this.handleClick : this.handleClick1}>\n          <i className={`fa fa-${this.props.left}`}></i>\n        </span>\n        <h1>{this.props.title}</h1>\n        <span>\n          <i className={`fa fa-${this.props.right}`}></i>\n        </span>\n      </div>\n     );\n  }\n}\nAppBar.propTypes = {\n  title: PropTypes.string,\n  left: PropTypes.string,\n  right: PropTypes.string,\n  leftfuc: PropTypes.func\n}\nAppBar.defaultProps = {\n  title: '',\n  left: 'chevron-left',\n  right: 'ellipsis-v'\n}\n\nconst mapStateToProps = (state)=>{\n  return{\n    selected: state.selected\n  }\n}\n \nexport default connect(mapStateToProps)(AppBar);","import React from 'react';\nimport { connect } from 'react-redux'\nimport { Avatar } from 'antd'\nimport imgURL from '../../assets/face.jpeg'\nimport './appAvatar.scss'\n\n\nclass Appavatar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      today: new Date()\n    }\n  }\n  getToday() {\n    let todayStr = this.state.today.toDateString().toUpperCase()\n    return todayStr\n  }\n  render() {\n    return (\n      <div className={!!this.props.selected ? 'appAvatar avatar-selected': 'appAvatar'} >\n        <Avatar\n          className=\"avatar-face\"\n          src={imgURL}\n          size={80}\n        ></Avatar>\n        <h2 className=\"avatar-name\">Hello, Tom</h2>\n        <p className=\"avatar-tips\">\n          Looks like feed good.<br />\n          You have {this.props.todayTasks.length} tasks to do today.\n        </p>\n        <p className=\"avatar-date\">TODAY: {this.getToday()}</p>\n      </div>\n    );\n  }\n}\n\n\n\nconst mapStateToProps = (state) => {\n  const tasks = []\n  state.todos.forEach(todo => {\n    todo.tasks.forEach(task => {\n      if (!task.done && !task.deleted) {\n        tasks.push(task)\n      }\n    })\n  })\n  return {\n    selected: state.selected,\n    todayTasks: tasks\n  }\n}\n\nexport default connect(mapStateToProps)(Appavatar);","import React from 'react';\nimport PropTypes from 'prop-types'\nimport './GradientColor.scss'\n\nconst GradientColor = (props) =>{\n  const theColor = () =>{\n    const colorBottom = `color-stop(30%, ${props.colors[0]})`\n    const colorTop = `to(${props.colors[1]})`\n    return {\n      backgroundImage: `-webkit-gradient(linear, left bottom, left top, ${colorBottom}, ${colorTop})`\n    }\n  }\n\n  return (\n    <div\n      className={props.active ? 'gradientColor gradientColor-active': 'gradientColor'}\n      style={theColor()}\n    >\n    </div>\n  )\n}\nGradientColor.propType = {\n  active: PropTypes.bool,\n  colors: PropTypes.array\n}\n\nexport default GradientColor","import React from 'react';\nimport { connect } from 'react-redux'\nimport GradientColor from '../gradientcolor/GradientColor'\nimport './Gradient.scss'\n\nclass Gradient extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {  }\n  }\n  render() { \n    return ( \n      <div className=\"gradient\">\n        {this.props.todos.map((todo, index)=>(\n          <GradientColor \n            key={todo.name}\n            colors={todo.colors}\n            active={index <= this.props.currentIndex} // 0,1,2\n          />\n        ))}\n      </div>\n     );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return{\n    todos: state.todos,\n    currentIndex: state.currentIndex\n  }\n}\n\nexport default connect(mapStateToProps,)(Gradient);","const selectTodo = (selectedTodo)=>({\n  type: 'SELECT_TODO',\n  selectedTodo\n})\n\nconst unselectTodo = () =>({\n  type: 'UNSELECT_TODO'\n})\n\nconst nextTodo = () =>({\n  type: 'NEXT_TODO'\n})\n\nconst prevTodo = () =>({\n  type: 'PREV_TODO'\n})\n\nconst doneTask = (value) =>({\n  type: 'DONE_TASK',\n  value\n})\n\nconst deleteTask = (value) =>({\n  type: 'DELETE_TASK',\n  value\n})\nconst toggleEditing =() =>({\n  type: 'TOGGLE_EDITING'\n})\n\nconst handleTxtOnchange = (value) => ({\n  type: 'HANDLE_TXT_ONCHANGE',\n  value\n})\n\nexport {\n  selectTodo,\n  unselectTodo,\n  nextTodo,\n  prevTodo,\n  doneTask,\n  deleteTask,\n  toggleEditing,\n  handleTxtOnchange\n}","import React from 'react';\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { doneTask, deleteTask } from '../../action/index'\nimport '../task/Task.scss'\n\n\n\nclass Task extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n\n  }\n\n  render() {\n    let task = this.props.task\n\n    return (\n      <div>\n        {!task.deleted && (\n        \n            <div className=\"task\">\n              <div\n                className=\"task-title\"\n              >\n                {task.title}\n              </div>\n              {!task.done && (\n                <span\n                  onClick={() => {\n                    this.props.doneTask({ task })\n                  }}\n                  className=\"task-done\"\n                >\n                  <i className=\"fa fa-check-circle\"></i>\n                </span>\n              )}\n\n              {task.done && (\n                <span\n                  className=\"task-delete\"\n                  onClick={() => {\n                    this.props.deleteTask({ task })\n                  }}\n                >\n                  <i className=\"fa fa-trash\"></i>\n                </span>\n              )}\n\n            </div>\n        )}\n      </div>\n\n    );\n\n  }\n}\n\nTask.propTypes = {\n  task: PropTypes.object\n}\n\nconst mapStateToProps = (state) => {\n  return {\n\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    { doneTask, deleteTask },\n    dispatch\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Task)","import React, { useMemo } from 'react';\nimport PropTypes from 'prop-types'\nimport Task from '../task/Task'\nimport './Todo.scss'\n\n\nfunction Todo(props) {\n  let { todo, theSelected } = props\n\n  let progressColor = useMemo(() => {\n    let colorLeft = `color-stop(30%, ${todo.colors[0]})`\n    let colorRight = `to(${todo.colors[1]})`\n    return `-webkit-gradient(linear, left bottom, right bottom, ${colorLeft}, ${colorRight})`\n  }, [todo])\n\n  let todayTasks = useMemo(() => {\n    const todoCount = todo.tasks.filter(task =>\n      !task.done && !task.deleted)\n    return todoCount\n  }, [todo])\n\n  let doneTasks = useMemo(() => {\n    const doneCount = todo.tasks.filter(task =>\n      task.done && !task.deleted)\n    return doneCount\n  }, [todo])\n\n  let progress = useMemo(() => {\n    let allCount = todo.tasks.filter(task => !task.deleted).length\n    let doneCount = todo.tasks.filter(task => !task.deleted && task.done).length\n    let num = Math.round(doneCount / allCount * 100)\n    return num\n  }, [todo])\n\n  return (\n    <div className=\"todo\">\n      {!theSelected && (\n        <div\n          className='todo-head'\n          onClick={() => { props.selectfuc({ todo }) }}>\n          <div className=\"todo-icon\" style={{ color: todo.colors[0] }}>\n            <i className={`fa fa-${todo.icon}`}></i>\n          </div>\n          <div className=\"todo-menu\">\n            <i className=\"fa fa-ellipsis-v\"></i>\n          </div>\n        </div>\n      )}\n\n      <div className=\"todo-body\">\n        <div className=\"todo-tips\">\n          <div>{doneTasks.length + todayTasks.length} Tasks</div>\n          <div>{doneTasks.length} Done</div>\n        </div>\n        <h3 className=\"todo-title\">{todo.name}</h3>\n        <div className=\"todo-progress\">\n          <span className=\"todo-progress-line\">\n            <i style={{\n              width: progress + '%',\n              backgroundImage: progressColor\n            }}></i>\n          </span>\n          <span className=\"todo-progress-num\">{!!progress ? progress + '%' : '0%'}</span>\n        </div>\n\n        {theSelected && (\n          <div className=\"todo-tasks\">\n            {todayTasks.length > 0 && (\n              <div className=\"todo-tasks-today\">\n                <h4>Today</h4>\n                <ul>\n                  {todayTasks.map((item, index) => (\n                    <li key={item.id}>\n                      <Task task={item} index={index}></Task>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n            {doneTasks.length > 0 && (\n              <div className=\"todo-tasks-done\">\n                <h4>Done</h4>\n                <ul>\n                  {doneTasks.map((item, index) => (\n                    <li key={item.id}>\n                      <Task task={item} index={index}></Task>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            )}\n          </div>\n        )}\n\n      </div>\n    </div>\n  )\n}\n\n\nTodo.propTypes = {\n  todo: PropTypes.object.isRequired,\n  theSelected: PropTypes.bool,\n  selectfun: PropTypes.func\n}\n\n\nexport default Todo","import React from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { selectTodo, nextTodo, prevTodo } from '../../action/index'\nimport Todo from '../todo/Todo'\nimport './TodoList.scss'\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      using: false\n    }\n    this.TodoListRef = React.createRef(null)\n  }\n  render() {\n    return (\n      <div\n        className={this.props.selected ? 'todoList todoList-selected' : 'todoList'}\n        ref={this.TodoListRef}\n      >\n        <ul\n          style={{ width: `${this.props.todos.length * 100}%` }}\n        >{\n            this.props.todos.map((todo) => (\n              <li\n                key={todo.name}\n                style={{ transform: `translateX(-${this.props.currentIndex * 100}%)` }}\n              >\n\n                <Todo\n                  todo={todo}\n                  selectfuc={this.props.selectTodo}\n                  theSelected={!!this.props.selected && todo === this.props.selected.todo}\n                />\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n  componentDidMount() {\n    const TodoListEL = this.TodoListRef && this.TodoListRef.current\n    let touch = {\n\n    }\n    if (document.body.ontouchstart !== undefined) {\n      TodoListEL.addEventListener('touchstart', e => {\n        touch.startX = e.touches[0].clientX\n        touch.endX = 0\n      })\n      TodoListEL.addEventListener('touchmove', e => {\n        touch.endX = e.touches[0].clientX\n      })\n      TodoListEL.addEventListener('touchend', () => {\n        if (!touch.endX || Math.abs(touch.endX - touch.startX) < 10) {\n          return\n        }\n        if (touch.endX < touch.startX) {\n          this.props.nextTodo()\n        } else {\n          this.props.prevTodo()\n        }\n      })\n    }else{\n      TodoListEL.addEventListener('mousedown', e =>{\n        this.setState({\n          using: true\n        })\n        touch.startX = e.clientX\n        touch.endX = 0\n      })\n      TodoListEL.addEventListener('mousemove', e =>{\n        if(this.state.using){\n          touch.endX = e.clientX\n        }\n      })\n      TodoListEL.addEventListener('mousemove', () => {\n        if(this.state.using){\n          if(!touch.endX || Math.abs(touch.endX - touch.startX) < 10){\n            return\n          }\n          if (touch.endX < touch.startX) {\n            this.props.nextTodo()\n          } else {\n            this.props.prevTodo()\n          }\n        }\n       \n        this.setState({\n          using: false\n        })\n      })\n    }\n\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    todos: state.todos,\n    currentIndex: state.currentIndex,\n    selected: state.selected\n  }\n}\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    { selectTodo, nextTodo, prevTodo },\n    dispatch\n  )\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoList);","import React from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport Appbar from '../appbar/appbar'\nimport Todo from '../todo/Todo'\nimport { unselectTodo } from '../../action/index'\nimport './TodoDetail.scss'\n\n\n\nclass TodoDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n  \n  \n  render() {\n    let selected = this.props.selected\n    return (\n      <div>\n        {!!selected && (\n            <div className=\"todo-detail\">\n              <Appbar leftfuc={this.props.unselectTodo} />\n              <Todo \n                todo={this.props.todo}\n                theSelected={true}\n              ></Todo>\n            </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  let currentTodo\n  state.todos.forEach((todo)=>{\n    if(!!state.selected && todo.name === state.selected.todo.name){\n      currentTodo = todo\n    }\n  })\n  return {\n    selected: state.selected,\n    todo: currentTodo\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ unselectTodo }, dispatch)\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoDetail);","import React from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { toggleEditing } from '../../action/index'\nimport './FloatingButton.scss'\n\nclass FloatingButton extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n  }\n\n\n  render() {\n    let { editing, selected, currentTodo } = this.props\n\n\n    const gradientcolor = () => {\n      const colorLeft = `color-stop(30%, ${currentTodo.colors[0]})`\n      const colorRight = `to(${currentTodo.colors[1]})`\n      return `-webkit-gradient(linear, left bottom, right top, ${colorLeft}, ${colorRight})`\n    }\n\n    return (\n      <div>\n        {!!selected && (      \n            <button\n              className={\n                !!editing ?\n                  'floating-button floating-button-editing' :\n                  'floating-button'\n              }\n              style={{ backgroundImage: gradientcolor() }}\n              onClick={this.props.toggleEditing}\n            >\n              <span>+</span>\n            </button>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const currentTodo = state.todos[state.currentIndex]\n\n  return {\n    editing: state.editing,\n    selected: state.selected,\n    currentTodo: currentTodo\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ toggleEditing }, dispatch)\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FloatingButton);","import React from 'react';\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { toggleEditing, handleTxtOnchange } from '../../action/index'\nimport Appbar from '../appbar/appbar'\nimport './TodoEditing.scss'\n\nclass TodoEditing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {}\n    this.handleOnchange = this.handleOnchange.bind(this)\n  }\n\n  handleOnchange(e) {\n    console.log(e.target.value)\n    this.props.handleTxtOnchange(e.target.value)\n  }\n  render() {\n    let selected = this.props.selected\n    return (\n      <div>\n        {!!this.props.editing && (\n          <div className=\"todoEditing\">\n            <Appbar\n              title={'New Tasks'}\n              left=\"check\"\n              leftfuc={this.props.toggleEditing}\n            />\n            <div className=\"todo-editing-wrap\">\n              <div className=\"todo-editing-head\">\n                <p>What tasks are you planning to perform?</p>\n              </div>\n              <div className=\"todo-editing-body\">\n                <textarea\n                  rows=\"3\"\n                  placeholder=\"Input new tasks\"\n                  value={this.props.editing.text}\n                  onChange={this.handleOnchange}\n                ></textarea>\n                <p className=\"todo-editing-meta\">\n                  <i className={`fa fa-${selected.todo.icon}`}></i>\n                  <span>New tasks of {selected.todo.name}</span>\n                </p>\n                <p className=\"todo-editing-meta\">\n                  <i className=\"fa fa-calendar\"></i>\n                  <span>Today</span>\n                </p>\n              </div>\n            </div>\n\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    editing: state.editing,\n    selected: state.selected\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators({ toggleEditing, handleTxtOnchange }, dispatch)\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TodoEditing);","import React from 'react';\nimport Appbar from '../../components/appbar/appbar'\nimport Appavatar from '../../components/avatar/appAvatar'\nimport Gradient from '../../components/gradient/Gradient'\nimport TodoList from '../../components/todolist/TodoList'\nimport TodoDetail from '../../components/tododetail/TodoDetail'\nimport FloatingButton from '../../components/floatingbutton/FloatingButton'\nimport TodoEditing from '../../components/todoediting/TodoEditing'\nimport './home.scss'\n\nclass Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {  }\n  }\n  render() { \n    return ( \n      <div className=\"home\">\n        <Appbar\n          title=\"TODO\"\n          left=\"bars\"\n          right=\"search\"\n        />\n        <Appavatar />\n        <Gradient />\n        <TodoList />\n        <TodoDetail />\n        <FloatingButton />\n        <TodoEditing />\n      </div>\n     );\n  }\n}\n \nexport default Home;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom'\nimport Home from '../view/home/home.js'\n\nconst RouterIndex = () =>{\n  return (\n    <Switch>\n      <Route path=\"/\" component={Home}></Route>\n    </Switch>\n  )\n}\n\nexport default RouterIndex","const defaultState = {\n  currentIndex: 0,\n  selected: null,\n  unselect: null,\n  editing: null,\n  todos: [\n    {\n      icon: 'user',\n      name: 'Personal',\n      tasks: [\n        {\n          id: 1,\n          title: 'Dating',\n          done: true,\n          deleted: false\n        },\n        {\n          id: 10,\n          title: 'Go swimming',\n          done: false,\n          deleted: false\n        }\n      ],\n      colors: ['#ff6262', '#ffa947']\n    },\n    {\n      icon: 'suitcase',\n      name: 'Work',\n      tasks: [\n        {\n          id: 3,\n          title: 'Design page',\n          done: true,\n          deleted: false\n        },\n        {\n          id: 4,\n          title: 'Design for Mobile App',\n          done: true,\n          deleted: false\n        },\n        {\n          id: 5,\n          title: 'HTML5/CSS3 Study',\n          done: true,\n          deleted: false\n        },\n        {\n          id: 6,\n          title: 'Weekly Report',\n          done: false,\n          deleted: false\n        },\n        {\n          id: 7,\n          title: 'Meeting',\n          done: false,\n          deleted: false\n        },\n        {\n          id: 8,\n          title: 'Complete Todo Component',\n          done: true,\n          deleted: false\n        },\n        {\n          id: 9,\n          title: 'Interviews',\n          done: false,\n          deleted: false,\n        }\n      ],\n      colors: ['#5b9df9', '#47bfff']\n    },\n    {\n      icon: 'home',\n      name: 'Home',\n      tasks: [\n        {\n          id: 2,\n          title: 'House Keeping',\n          done: true,\n          deleted: false\n        },\n        {\n          id: 11,\n          title: 'Repair Water Pipes',\n          done: false,\n          deleted: false,\n        },\n        {\n          id: 12,\n          title: 'Feed The Cat',\n          done: false,\n          deleted: false,\n        }\n      ],\n      colors: ['#2c7d59', '#3ba776']\n    }\n  ],\n}\n\nconst reducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case 'SELECT_TODO':\n      {\n        let newState = JSON.parse(JSON.stringify(state))\n        newState.unselect = null\n        newState.selected = action.selectedTodo\n        return newState\n      }\n    case 'UNSELECT_TODO':\n      {\n        let newState = JSON.parse(JSON.stringify(state))\n        newState.unselect = newState.selected\n        newState.selected = null\n        return newState\n      }\n    case 'NEXT_TODO':\n      {\n        let newState = JSON.parse(JSON.stringify(state))\n        let count = newState.currentIndex + 1\n        newState.currentIndex = count % 3\n        return newState\n      }\n    case 'PREV_TODO':\n      {\n        let newState = JSON.parse(JSON.stringify(state))\n        let count = newState.currentIndex - 1\n        newState.currentIndex = Math.abs(count % 3)\n        return newState\n      }\n    case 'DONE_TASK': \n      {\n        let newState = JSON.parse(JSON.stringify(state))\n        newState.todos.forEach(todo => {\n          todo.tasks.forEach(task => {\n            if (task.title === action.value.task.title) {\n              task.done = true\n            }\n          })\n        });\n        return newState\n      }\n    case 'DELETE_TASK':\n      {\n        let newState = JSON.parse(JSON.stringify(state))\n        newState.todos.forEach(todo => {\n          todo.tasks.forEach(task => {\n            if (task.title === action.value.task.title) {\n              task.deleted = true\n            }\n          })\n        });\n        return newState\n      }\n    case 'HANDLE_TXT_ONCHANGE':\n      {\n        let newState = JSON.parse(JSON.stringify(state))\n        newState.editing.text = action.value\n        return newState\n      }\n    case 'TOGGLE_EDITING':\n      {\n        let newState = JSON.parse(JSON.stringify(state))\n        if (newState.editing && newState.editing.text) {\n          newState.todos.forEach((todo) => {\n            if (todo.name === newState.selected.todo.name) {\n              todo.tasks.unshift({\n                id: Math.random()*100,\n                title: newState.editing.text,\n                done: false,\n                deleted: false\n              })\n            }\n          })\n        }\n        newState.editing = newState.editing ? null : { text: '' }\n        return newState\n      }\n    default:\n      return state\n  }\n}\n\nexport default reducer","import { createStore } from 'redux'\nimport reducer from '../reducer/index'\n\nconst store = createStore(reducer)\n\nexport default store","import React from 'react';\nimport RouterIndex from './router/index'\nimport { HashRouter as Router } from \"react-router-dom\";\nimport store from './stroe/index'\nimport { Provider } from 'react-redux'\n\nimport './App.scss'\n\nfunction App() {\n  return (\n    <Router>\n      <Provider store={store}>\n        <div className=\"App\">\n          <RouterIndex />\n        </div>\n      </Provider>\n    </Router>\n\n\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n","module.exports = __webpack_public_path__ + \"static/media/face.93e1b2fe.jpeg\";"],"sourceRoot":""}